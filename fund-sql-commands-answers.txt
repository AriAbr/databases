1. List the commands for adding, updating, and deleting data.

INSERT INTO, UPDATE, DELETE FROM

2. Explain the structure for each type of command.

Each command begins with the command name followed by the table name.

For `INSERT INTO`, if more than one value is being inserted, then the table name
is followed by the names of the columns where data is being entered separated by
commas and enclosed in parenthesis. Then, the word VALUES is used to indicate
that what follows are the values to be inserted. Then each row is entered, each
one separated by a comma.

For `UPDATE`, the table name is followed by a `SET` statement which indicates
which column's data should be updated and then a `WHERE` statement which
indicates which rows the update should be applied to.

For `DELETE FROM`, the table name is followed by a `WHERE` statement which
indicates which rows should be deleted.

The `SET` and `WHERE` clauses in `UPDATE` and `DELETE FROM` can each have
multiple clauses. In `SET`, the clauses are separated by commas and in `WHERE`
they are separated by the word `AND`.

3. What are some of the data types that can be used in tables? Give a real-world
example of each type.

The integer data type could be used to store the number of members on a team.
The text data type could be used to store the name of a team.
The numeric data type could be used to store the price of a team uniform.

4. Decide how to create a new table to hold a list of people invited to a
wedding dinner. The table needs to have first and last names, whether they sent
in their RSVP, the number of guests they are bringing, and the number of meals
(1 for adults and 1/2 for children).

Which data type would you use to store each of the following pieces of information?
  First and last name.                  text
  Whether they sent in their RSVP.      boolean
  Number of guests.                     integer
  Number of meals.                      numeric

Write a command that creates the table to track the wedding dinner.
  CREATE TABLE guests (
    firstname text,
    lastname text,
    rsvpsent boolean,
    guestcount integer,
    mealcount numeric(1,1)
  );

Write a command that adds a column to track whether the guest sent a thank you
card.

  ALTER TABLE guests ADD COLUMN thankyousent boolean;

You have decided to move the data about the meals to another table, so write a
command to remove the column storing the number meals from the wedding table.

  ALTER TABLE guests DROP COLUMN mealcount;

The guests will need a place to sit at the reception, so write a command that
adds a column for table number.

  ALTER TABLE guests ADD COLUMN tablenumber integer;

The wedding is over and we do not need to keep this information, so write a
command that deletes the table numbers from the database.

  DROP TABLE guests;

5. Write a command to create a new table to hold the books in a library with the
columns ISBN, title, author, genre, publishing date, number of copies, and
available copies.

  CREATE TABLE books (
    ISBN integer,
    title text,
    author text,
    genre text,
    publishingdate integer,
    numberofcopies integer,
    availablecopies integer
  );

  Find three books and add their information to the table.

    INSERT INTO books (ISBN, title, author, genre, publishingdate, numberofcopies, availablecopies)
      VALUES
      (0809058405, 'Innumeracy: Mathematical Illiteracy and its Consequences', 'John Allen Paulos', 'Mathematics-Popular works', 1988, 1, 1),
      (0380705273, 'Siblings Without Rivalry: How to Help Your Children Live Together So You Can Live Too', 'Adele Faber', 'Parenting', 1987, 1, 1),
      (9780394800134, 'One fish, two fish, red fish, blue fish', 'Dr. Seuss', 'Children's books', 1960, 1, 1);

  Someone has just checked out one of the books. Change the number of available
  copies to 1 fewer.

    UPDATE books SET numberofcopies = numberofcopies+1 WHERE ISBN=0809058405;

  Now one of the books has been added to the banned books list. Remove it from
  the table.

    DELETE FROM books WHERE ISBN=9780394800134;

6. Write a command to make a new table to hold spacecrafts. Information should
include id, name, year launched, country of origin, a brief description of the
mission, orbiting body, if it is currently operating, and its approximate miles
from Earth. In addition to the table creation, provide commands that perform the
following operations:
-Add three non-Earth-orbiting satellites to the table.
-Remove one of the satellites from the table since it has just crashed into the
planet.
-Edit another satellite because it is no longer operating and change the value
to reflect that.

  CREATE TABLE spacecrafts (
    id integer,
    name text,
    launchyear integer,
    origincountry text,
    missiondescription text,
    orbitingbody text,
    isoperating boolean,
    milesfromearth integer
  );

  INSERT INTO spacecrafts (id, name, launchyear, origincountry, missiondescription, orbitingbody, isoperating, milesfromearth)
    VALUES
    (45, 'first craft', 2015, `USA`, 'find the duck', 'Jupiter', TRUE, 500,000,000),
    (74, 'second craft', 2016, `CANADA`, 'rebuild the saxophone', 'Moon', TRUE, 300,000),
    (68, 'third craft', 2000, `JAPAN`, 'plant things', 'Pluto', TRUE, 4,600,000,000),

  DELETE FROM spacecrafts WHERE id=74;

  UPDATE spacecrafts SET isoperating=FALSE WHERE id=45;

7. Write a command to create a new table to hold the emails in your inbox. This
table should include an id, the subject line, the sender, any additional
recipients, the body of the email, the timestamp, whether or not you have read
the email, and the id of the email chain it's in. Also provide commands that
perform the following operations:

-Add three new emails to the inbox.
-You deleted one of the emails, so write a command to remove the row from the
inbox table.
-You started reading an email but just heard a crash in another room. Mark the
email as unread before investigating the crash, so you can come back and read it
later.

  CREATE TABLE inbox (
    id integer,
    subject text,
    sender text,
    otherrecipients text,
    body text,
    timestamp timestamp,
    isread boolean,
    chainid integer
  );

  INSERT INTO table (id, subject, sender, otherrecipients, body, timestamp, isread, chainid)
    VALUES
    (1,'feed the dog', 'Jim', 'Barry', 'blah blah blah', 2015-04-27 09:37, FALSE, 4),
    (2,'clean your room', 'Jennifer', '', 'blah blah blah blah', 2017-12-30 19:46, FALSE, 6),
    (3,'plant the plants', 'Jack', 'Jack Jack', 'blah blah', 2008-10-15 14:24, FALSE, 3);

  DELETE FROM inbox WHERE id=2;

  UPDATE inbox SET isread=TRUE WHERE id=3;
  UPDATE inbox SET isread=FALSE WHERE id=3;
